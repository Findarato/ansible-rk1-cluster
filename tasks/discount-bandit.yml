---
- name: 'Create network'
  community.docker.docker_network:
    name: 'discountbandit_backend'
    driver: 'overlay'
  tags:
    - discountbandit

- name: 'Create directory for container data'
  ansible.builtin.file:
    path: "{{ docker_data_dir }}/{{ dir }}"
    owner: '{{ docker_user }}'
    group: '{{ docker_user }}'
    mode: '0755'
    state: 'directory'
  loop:
    - 'discountbandit-config'
    - 'discountbandit-data'
  loop_control:
    loop_var: 'dir'

- name: 'Remove discountbandit'
  community.docker.docker_swarm_service:
    name: 'discountbandit'
    state: absent
    replicas: 0

- name: 'Deploy discountbandit'
  community.docker.docker_swarm_service:
    name: 'discountbandit'
    image: "lscr.io/linuxserver/discountbandit:{{ discountbandit_release }}"
    # hostname: discountbandit-primary
    force_update: true
    env:
      - "ServerName=discountbandit"
      - "PUID=1000"
      - "PGID=1000"
      - "TZ=America/Chicago"
      # - "MASTER_URL=https://discountbandit.rk1.mcharryville.space" #optional
      - "SHARED_SECRET=password" #optional
      - "CACHE_DIR=/tmp" #optional
    mounts:
      - source: "{{ docker_data_dir }}/discountbandit-config"
        target: '/config'
        type: 'bind'
      - source: "{{ docker_data_dir }}/discountbandit-data"
        target: '/data'
        type: 'bind'
      - source: "/etc/localtime"
        target: '/etc/localtime'
        type: 'bind'
        readonly: true
    networks:
      - 'discountbandit_backend'
      - 'traefik_backend'
    publish:
    labels:
      traefik.enable: "true"
      traefik.http.routers.discountbandit.rule: Host(`{{ discountbandit_app_name }}.{{ traefik_domain_rk1 }}`)
      traefik.http.routers.discountbandit.tls: "true"
      traefik.http.routers.discountbandit.entrypoints: websecure
      traefik.http.services.discountbandit.loadbalancer.server.port: "80"
    mode: 'replicated'
    replicas: 1
    restart_config:
      condition: "{{ restart_condition }}"
    placement:
      constraints:
        - 'node.role == worker'
  no_log: "{{ not docker_service_debug }}"