---
- name: 'Create network'
  community.docker.docker_network:
    name: 'pihole_backend'
    driver: 'overlay'

- name: 'Create directory for container data'
  ansible.builtin.file:
    path: "{{ docker_data_dir }}/{{ dir }}"
    owner: 'ubuntu'
    group: 'ubuntu'
    mode: '0750'
    state: 'directory'
  loop:
    - 'pihole-config'
    - 'pihole-dnsmasq.d'
  loop_control:
    loop_var: 'dir'


- name: 'Deploy pihole'
  community.docker.docker_swarm_service:
    name: 'pihole'
    image: "pihole/pihole:{{ pihole_release }}"
    env:
      - 'TZ="America/Chicago"'
      - "VIRTUAL_HOST: {{ pihole_app_name }}.{{ traefik_domain }}"
      - 'VIRTUAL_PORT: 80'
    mounts:
      - source: "{{ docker_data_dir }}/gitea_data"
        target: '/data'
        type: 'bind'
    networks:
      - 'pihole_backend'
      - 'traefik_backend'
    publish:
      - published_port: 2222
        target_port: 2222
    labels:
      traefik.docker.network: traefik-ingress
      traefik.http.routers.pihole-http.entrypoints: web
      traefik.http.routers.pihole-http.rule: HostHeader(`{{ pihole_app_name }}.{{ traefik_domain }}`)
      traefik.http.routers.pihole-http.service: pihole-http
      traefik.http.services.pihole-http.loadbalancer.server.port: 80
      traefik.http.routers.pihole-http.middlewares: pihole-main
      traefik.http.middlewares.pihole-main.chain.middlewares: frame-deny,browser-xss-filter
      traefik.http.middlewares.frame-deny.headers.framedeny: true
      traefik.http.middlewares.browser-xss-filter.headers.browserxssfilter: true
    mode: 'replicated'
    replicas: 1
    restart_config:
      condition: "{{ restart_condition }}"
    user: null
  no_log: "{{ not docker_service_debug }}"
