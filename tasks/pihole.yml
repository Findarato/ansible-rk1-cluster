---
- name: 'Create network'
  community.docker.docker_network:
    name: 'pihole_backend'
    driver: 'overlay'
    

- name: 'Create directory for container data'
  ansible.builtin.file:
    path: "{{ docker_data_dir }}/{{ dir }}"
    owner: 'ubuntu'
    group: 'ubuntu'
    mode: '0755'
    state: 'directory'
  loop:
    - 'pihole-config'
    - 'pihole-dnsmasq.d'
  loop_control:
    loop_var: 'dir'

- name: 'Remove pihole'
  community.docker.docker_swarm_service:
    name: 'pihole'
    state: absent
    replicas: 0

- name: 'Deploy pihole'
  community.docker.docker_swarm_service:
    name: 'pihole'
    image: "pihole/pihole:{{ pihole_release }}"
    env:
      - "VIRTUAL_HOST={{ pihole_app_name }}.{{ traefik_domain }}"
      - 'VIRTUAL_PORT=80'
      - 'DNSMASQ_USER=root'
      # - 'TZ="America/Chicago"'
      - 'WEBPASSWORD=password'
      - "hostname={{ pihole_app_name }}"
    mounts:
      - source: "{{ docker_data_dir }}/pihole-config"
        target: '/etc/pihole'
        type: 'bind'
      - source: "{{ docker_data_dir }}/pihole-dnsmasq.d"
        target: '/etc/dnsmasq.d'
        type: 'bind'
      - source: "/etc/localtime"
        target: '/etc/localtime'
        type: 'bind'
    networks:
      - 'pihole_backend'
      - 'traefik_backend'
    # dns: "{{ dns_servers }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole.rule: Host(`{{ pihole_app_name }}.{{ traefik_domain_rk1 }}`)
      # traefik.http.routers.pihole.rule: HostHeader(`{{ pihole_app_name }}.{{ traefik_domain }}`)
      traefik.http.routers.pihole.tls: "true"
      traefik.http.routers.pihole.entrypoints: websecure
      traefik.http.routers.pihole.tls.certresolver: cloudflare
      traefik.http.routers.pihole.tls.domains[0].main: "*.mcharryville.space"
      traefik.http.routers.pihole.tls.domains[0].sans: "*.rk1.mcharryville.space"
      traefik.http.routers.pihole.middlewares[0]: 'pihole-redirectregex'
      traefik.http.routers.pihole.middlewares[1]: 'pihole-addprefix'
      traefik.http.services.pihole.loadbalancer.server.port: 80

      # 53/udp
      traefik.udp.routers.pihole-dns-udp.entrypoints: pihole-dns-udp
      traefik.udp.routers.pihole-dns-udp.service: pihole-dns-udp
      traefik.udp.services.pihole-dns-udp.loadbalancer.server.port: "53"

      # # 53/tcp
      # traefik.tcp.routers.pihole-dns-tcp.entrypoints: pihole-dns-tcp
      # traefik.tcp.routers.pihole-dns-tcp.service: pihole-dns-tcp
      # traefik.tcp.routers.pihole-dns-tcp.rule: HostSNI('*')
      # traefik.tcp.services.pihole-dns-tcp.loadbalancer.server.port: "53/tcp"

      # traefik.http.routers.pihole.middlewares[1]: pihole-addprefix
    mode: 'replicated'
    replicas: 1
    restart_config:
      condition: "{{ restart_condition }}"
    placement:
      constraints:
        - 'node.role == worker'
  no_log: "{{ not docker_service_debug }}"

# - name: 'Deploy orbital-sync'
#   community.docker.docker_swarm_service:
#     name: 'orbital-sync'
#     image: "mattwebbio/orbital-sync:{{ orbital_sync_release }}"
#     state: absent
#     force_update: true
#     env:
#       - "PRIMARY_HOST_BASE_URL=https://pihole.mcharryville.space"
#       - "PRIMARY_HOST_PASSWORD=password"
#       - "SECONDARY_HOSTS_1_BASE_URL=http://pihole"
#       - "SECONDARY_HOSTS_1_PASSWORD=password"
#       # - "SECONDARY_HOSTS_2_BASE_URL='http://192.168.1.3'"
#       # - "SECONDARY_HOSTS_2_PASSWORD='your_password3'"
#       # - "SECONDARY_HOSTS_3_BASE_URL='http://server:8080'"
#       # - "SECONDARY_HOSTS_3_PASSWORD='your_password4'"
#       # - SECONDARY_HOSTS_3_PATH: '/apps/pi-hole'
#       - "INTERVAL_MINUTES=60"
#       - "UPDATE_GRAVITY=true"
#     networks:
#       - 'pihole_backend'
#       - 'traefik_backend'
#     dns: "{{ dns_servers }}"
#     mode: 'replicated'
#     replicas: 0
#     restart_config:
#       condition: "{{ restart_condition }}"
#   no_log: "{{ not docker_service_debug }}"