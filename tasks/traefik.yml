---
- name: 'Create network'
  community.docker.docker_network:
    name: 'traefik_backend'
    driver: 'overlay'
    internal: false

- name: 'Create directory for container data'
  ansible.builtin.file:
    path: "{{ docker_data_dir }}/{{ dir }}"
    owner: 'ubuntu'
    group: 'ubuntu'
    mode: '0750'
    state: 'directory'
  loop:
    - 'traefik_data'
    - 'traefik_data/certs/'
  loop_control:
    loop_var: 'dir'

- name: 'Ensure SSL certifcate'
  when: traefik_selfsign
  block:
    - name: 'Generate SSL key'
      community.crypto.openssl_privatekey:
        path: "{{ docker_data_dir }}/traefik_data/certs/traefik.key"

    - name: 'Generate SSL certificate request'
      community.crypto.openssl_csr:
        path: "{{ docker_data_dir }}/traefik_data/certs/traefik.csr"
        privatekey_path: "{{ docker_data_dir }}/traefik_data/certs/traefik.key"
        common_name: "*.{{ traefik_domain }}"

    - name: 'Self-sign SSL certificate'
      community.crypto.x509_certificate:
        path: "{{ docker_data_dir }}/traefik_data/certs/traefik.crt"
        privatekey_path: "{{ docker_data_dir }}/traefik_data/certs/traefik.key"
        csr_path: "{{ docker_data_dir }}/traefik_data/certs/traefik.csr"
        provider: selfsigned

- name: 'Deploy Traefik YML config'
  ansible.builtin.copy:
    src: 'files/traefik.yml'
    dest: "{{ docker_data_dir }}/traefik_data/traefik.yml"
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Deploy Traefik YML Extra config'
  ansible.builtin.copy:
    src: 'files/config.yml'
    dest: "{{ docker_data_dir }}/traefik_data/config.yml"
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Deploy Traefik'
  community.docker.docker_swarm_service:
    name: 'traefik'
    image: 'traefik:{{ traefik_version }}'
    # state: absent
    force_update: true
    command:
      - '/usr/local/bin/traefik'
      - "--log.level=DEBUG"
      - '--providers.docker'
      - '--providers.docker.swarmMode=true'
      # - '--providers.swarm=true' # Version 3
      - '--global.checkNewVersion=true'
      - '--global.sendAnonymousUsage=true'
      - '--providers.docker.watch'
      - '--providers.docker.network=traefik_backend'
      - '--providers.file.filename=/traefik.yml'
    labels:
      traefik.http.routers.websecure.tls.certresolver: cloudflare
      traefik.http.routers.websecure.tls.domains[0].main: "*.mcharryville.space"
      traefik.http.routers.websecure.tls.domains[0].sans: "*.rk1.mcharryville.space"
      traefik.http.routers.websecure.service[0]: "api@internal"
      traefik.http.routers.websecure.service[1]: "ping@internal"
      traefik.http.routers.whoami.tls.certresolver: cloudflare
    env:
      # - "CF_API_EMAIL={{ vault_cf_api_email }}"   # Do not use if using token
      # - "CF_API_KEY={{ vault_cf_api_key }}"       # Do not use if using token
      - "CF_DNS_API_TOKEN={{ vault_cf_api_token }}"
    mounts:
      - source: '/etc/localtime'
        target: '/etc/localtime'
        type: 'bind'
        readonly: true
      - source: '/var/run/docker.sock'
        target: '/var/run/docker.sock'
        type: 'bind'
        readonly: true
      - source: '{{ docker_data_dir }}/traefik_data/traefik.yml'
        target: '/traefik.yml'
        type: 'bind'
      - source: '{{ docker_data_dir }}/traefik_data/certs'
        target: '/certs/'
        type: 'bind'
        readonly: false
      - source: '{{ docker_data_dir }}/traefik_data/config.yml'
        target: '/config.yml'
        type: 'bind'
        readonly: true
    networks:
      - 'traefik_backend'
    mode: 'global'
    restart_config:
      condition: "{{ restart_condition }}"
    publish:
      - published_port: 80
        target_port: 80
        mode: "host"
      - published_port: 443
        target_port: 443
        mode: "host"
      - published_port: 8080
        target_port: 8080
        mode: "host"
      - published_port: 8082
        target_port: 8082
        mode: "host"
      - published_port: 3333
        target_port: 3333
        mode: "host"
      - published_port: 53
        target_port: 53
        protocol: "udp"
        mode: "host"
    placement:
      constraints:
        - 'node.role == manager'
    user: null

- name: 'Deploy whoami'
  community.docker.docker_swarm_service:
    name: 'whoami'
    image: "traefik/whoami"
    # state: absent
    force_update: true
    networks:
      - 'traefik_backend'
    labels:
      traefik.enable: "true"
      traefik.http.routers.whoami.rule: "Host(`whoami.{{ traefik_domain_rk1 }}`)"
      traefik.http.routers.whoami.tls: "true"
      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.services.whoami.loadbalancer.server.port: "80"
    mode: 'replicated'
    replicas: 3
    restart_config:
      condition: "{{ restart_condition }}"
    placement:
      constraints:
        - 'node.role == worker'
  no_log: "{{ not docker_service_debug }}"