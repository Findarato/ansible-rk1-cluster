api:
  dashboard: true
  debug: true
  insecure: true

metrics:
  # addInternals: true
  influxDB:
    address: influx.mcharryville.space:8089
    protocol: tcp
    database: traefik
    retentionPolicy: "two_hours"
  prometheus:
    addEntryPointsLabels: true
    entryPoint: metrics
    # entryPoint: metrics
# accesslog: true
sendAnonymousUsage: true

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true
  websecure:
    address: ":443"
  pihole-dns-udp:
    address: ":53/udp"
  pihole-dns-tcp:
    address: ":53/tcp"
  metrics:
    address: :8082

tls:
  stores:
    default:
      defaultCertificate:
        certFile = "/certs/traefik.crt"
        keyFile = "/certs/traefik.key"

ping:
  entryPoint: websecure

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    network: traefik_backend
    swarmMode: true # This is for version 2
  file:
    filename: /config.yml



certificatesResolvers:
  cloudflare:
    acme:
      email: findarato@gmail.com
      storage: /certs/acme.json
      certificatesDuration: 72
      caServer: https://acme-v02.api.letsencrypt.org/directory # production (default)
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging
      dnsChallenge:
        provider: cloudflare
        #disablePropagationCheck: true # uncomment this if you have issues pulling certificates through cloudflare, By setting this flag to true disables the need to wait for the propagation of the TXT record to all authoritative name servers.
        #delayBeforeCheck: 60s # uncomment along with disablePropagationCheck if needed to ensure the TXT record is ready before verification is attempted 
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"